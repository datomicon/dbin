{"version":3,"sources":["bin.coffee"],"names":[],"mappings":"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","file":"bin.js","sourceRoot":"/source/","sourcesContent":["require(\"source-map-support\").install()\n\nyargs = require(\"yargs\")\nonUp = require(\"on-up\")\ndbin = require(\"./index.js\")\npath = require(\"path\")\nfs = require(\"fs\")\n\n\nargs = yargs\n  .usage(\"Usage: $0 [command] [-options]\")\n  .example(\"$0 -rt\", \"same as $ dbin start --transactor --rest\")\n  .example(\"$0 gets-ok?\", \"wait-up for the servers to start / answer with yes or no (whether they did)\")\n  .string(\"o\").alias(\"o\", \"config\").describe(\"o\", \"from file, merged into defaults.json\")\n  .boolean([\"p\", \"t\", \"r\", \"c\"])\n  .alias(\"p\", \"print\").describe(\"p\", \"prints the config\")\n  .alias(\"t\", \"transactor\").describe(\"t\", \"applies to the transactor\")\n  .alias(\"r\", \"rest\").describe(\"r\", \"applies to the rest server\")\n  .alias(\"c\", \"console\").describe(\"c\", \"applies to the console client\")\n  .argv\n\ntry\n  # setup relative config options path unless it starts with / (i.e. is absolute)\n  if args.o? and args.o[0] != '/' then args.o = path.join process.cwd(), args.o\n  d = dbin.use(if args.o? then require(args.o))\ncatch error\n  console.log \"Bad options --config '#{args.o}'.\"\n  console.log \"The file must be / export valid json.\"\n  console.log error\n  process.exit 1\n\nif args.p\n  console.log()\n  console.log d.cfg\n  console.log()\n\n# the first arg is the command, defaults to start\ncmd = if args._.length then args._[0] else \"start\"\n\ncmds =\n  start: \"the default -- starts the options-specified servers\"\n  \"gets-ok?\": \"get the rest api alias and report with a yes or not\"\n  \"?, help\": \"this help\"\n\nhelp = (message) ->\n  if message\n    console.log(message)\n    console.log()\n  console.log yargs.help()\n  console.log \"Commands:\"\n  for cmd of cmds\n    console.log \"  #{cmd} \\t#{cmds[cmd]}\"\n  console.log()\n\n\nswitch cmd\n\n  when \"start\"\n    unless args.t or args.r or args.c\n      help(\"Don't know what to start.\")\n    else\n      if args.t then d.run(\"transactor\")\n      if args.r then d.run(\"rest\")\n      if args.c\n        if d.cfg.edition is \"pro\" or fs.existsSync(d.cfg.console.path)\n          d.run(\"console\")\n        else\n          console.log \"No console found at #{d.cfg.console.path}\n- please download and install it there or else set console.path accordingly.\"\n          process.exit 1\n\n  when \"gets-ok?\"\n    onUp {req: {uri: d.cfg.rest.base}, dots: true, patience: 70000}, (res) ->\n      if res.statusCode is 200\n        console.log \"yes\"\n        process.exit 0\n      else\n        console.log \"not\"\n        process.exit 1\n\n  when \"?\", \"help\"\n    help()\n"]}